{"version":3,"sources":["Navigation/NavItem.js","Navigation/NavLinks.js","UI/Button/Button.js","Navigation/Header.js","axios.js","store/actions/menuActions.js","store/actions/actionTypes.js","store/actions/orderActions.js","store/actions/cartActions.js","UI/Card/Card.js","UI/BackDrop/Backdrop.js","UI/Modal/Modal.js","UI/Spinner/Spinner.js","ContentSection/BurgerConfig/Ingredients.js","ContentSection/BurgerConfig/BurgerConfig.js","ContentSection/Menu/Menu.js","ContentSection/Cart/Cart.js","ContentSection/ContentSection.js","App.js","store/reducers/menuReducer.js","store/reducers/orderReducer.js","store/reducers/cartReducer.js","serviceWorker.js","index.js"],"names":["NavItem","props","className","to","exact","children","NavLinks","href","action","style","d","type","onClick","disabled","Header","padding","color","this","totalPrice","toFixed","Component","connect","state","ownProps","cart","instance","axios","create","baseURL","errorMSG","err","error","selectBurger","burger","checkOut","dispatch","post","then","result","get","res","order","data","Object","keys","map","el","length","catch","console","log","message","Card","onAnimationEnd","backdrop","show","Modal","Fragment","closeModal","transform","Spinner","Ingredients","name","amount","ingredientPrice","remove","add","BurgerConfig","meal","extraMealPrice","0","1","mealHandler","removeMeal","carousel","slidePrev","addMeal","slideNext","setState","prev","cartHandler","selectedBurger","note","addToCart","sB","at","ateria","ingredientsList","ingredients","key","ingredientPrices","price","extra","addIng","removeIng","itm","i","width","ref","enableSwipe","enableMouseSwipe","pagination","showArrows","src","img","alt","margin","display","MenuList","modal","added","id","animationHandler","prevState","animate","modalHandler","configBurger","setMenu","match","path","prevProps","modalMenu","menu","textAlign","menuSection","menu_section","menuPageActions","ing","ingredientName","resetPrice","item","Cart","process","closeCheckOut","orderConfiguration","reduce","obj","cartContent","index","justifyContent","marginBottom","reduceAmount","increaseAmount","ex","deleteFromCart","ContentSection","component","Menu","App","initState","reducer","newMenu","salad","bacon","cheese","meat","onions","extraIngredients","replace","decreaseAmountInCart","splice","increaseAmountInCart","g","find","x","undefined","push","filter","_","Boolean","window","location","hostname","mainReducer","combineReducers","orderReducer","menuReducer","cartReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ikBAeeA,MAVf,SAAiBC,GACb,OACI,wBAAIC,UAAU,WACV,kBAAC,IAAD,CAASC,GAAIF,EAAME,GAAIC,OAAK,GACvBH,EAAMI,YCaRC,MAjBf,WACI,OACI,wBAAIJ,UAAU,YACV,kBAAC,EAAD,CAASC,GAAG,YAAZ,WAGA,kBAAC,EAAD,CAASA,GAAG,WAAZ,UAGA,kBAAC,EAAD,CAASA,GAAG,WAAZ,YCTG,G,MAAA,SAAAF,GAEb,OAAIA,EAAMM,KAEN,uBAAGA,KAAMN,EAAMM,KAAML,UAAS,wBAAmBD,EAAMO,QAAU,WAAaC,MAAOR,EAAMQ,OACxFR,EAAMI,UAKTJ,EAAME,GAEN,kBAAC,IAAD,CACEA,GAAIF,EAAME,GACVC,MAAOH,EAAMG,MACbF,UAAS,wBAAmBD,EAAMO,QAAU,WAC5CC,MAAOR,EAAMQ,OACZR,EAAMI,UAMX,4BACEH,UAAS,wBAAmBD,EAAMO,QAAU,UAAnC,YAAgDP,EAAMS,GAAK,KACpEC,KAAMV,EAAMU,KACZF,MAAOR,EAAMQ,MACbG,QAASX,EAAMW,QACfC,SAAUZ,EAAMY,UACfZ,EAAMI,YC1BPS,E,uKAEE,OACI,gCACI,kBAAC,EAAD,CAAQX,GAAG,UAAUM,MAAO,CAAEM,QAAS,KAAOP,OAAO,aAAa,qCAClE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQA,OAAO,SAASC,MAAO,CAAEO,MAAO,SAAWb,GAAG,SAAtD,WAAuEc,KAAKhB,MAAMiB,WAAWC,QAAQ,GAArG,U,GANKC,aAkBNC,eANS,SAACC,EAAOC,GAC5B,MAAO,CACHL,WAAYI,EAAME,KAAKN,cAIhBG,CAAyBP,G,6BCpBzBW,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAU,+CCQDC,EAAW,SAACC,GACrB,MAAO,CACHnB,KCba,QDcboB,MAAOD,IEVFE,EAAe,SAACC,GACzB,MAAO,CACHtB,KDHuB,kBCIvBsB,OAAQA,IC2CHC,EAAW,SAACV,GAErB,OAAO,SAAAW,GACHT,EAAMU,KAAK,eAAgBZ,GAC1Ba,MAAK,SAAAC,GACFZ,EAAMa,IAAI,gBACTF,MAAK,SAAAG,GApBU,IAACC,EAqBbN,GArBaM,EAqBSD,EAAIE,KAnB/B,CACH/B,KFtBiB,YEuBjB8B,MAHQE,OAAOC,KAAKH,GAAOI,KAAI,SAAAC,GAAE,OAAIA,KAG1BC,aAmBNC,OAAM,SAAAlB,GACHmB,QAAQC,IAAIpB,GACZK,EAASN,EAASC,EAAIqB,gBAG7BH,OAAM,SAAAlB,GACHmB,QAAQC,IAAIpB,GACZK,EAASN,EAASC,EAAIqB,e,MCtDnBC,MARf,SAAcnD,GACV,OACI,yBAAKC,UAAS,eAAUD,EAAMC,WAAamD,eAAiBpD,EAAMoD,gBAC7DpD,EAAMI,WCGJiD,G,YANE,SAACrD,GACf,OAAOA,EAAMsD,KACV,yBAAKrD,UAAU,WAAWU,QAASX,EAAMW,SAAzC,KACA,OCeS4C,MAjBf,SAAevD,GACX,OACI,kBAAC,IAAMwD,SAAP,KACI,kBAAC,EAAD,CAAUF,KAAMtD,EAAMsD,KAAM3C,QAASX,EAAMyD,aAC3C,yBACIjD,MAAO,CAAEkD,UAAW1D,EAAMsD,KAAO,gBAAkB,sBACnDrD,UAAU,SACV,0BAAMA,UAAU,IAAIU,QAASX,EAAMyD,YAC/B,0BAAMxD,UAAU,SAAhB,QAEHD,EAAMI,Y,MCNRuD,MANf,WACI,OACI,yBAAK1D,UAAU,UAAf,e,8BCiBO2D,G,MAlBK,SAAC5D,GAAD,OAEhB,yBAAKC,UAAU,cACX,yBAAKA,UAAU,SAASD,EAAM6D,KAA9B,MAAuC7D,EAAM8D,QAC7C,qCAAW9D,EAAM+D,gBAAjB,KACA,6BACI,kBAAC,EAAD,CAAQpD,QAASX,EAAMgE,OACnBpD,SAAUZ,EAAM8D,QAAU,EAC1B7D,UAAU,QAFd,UAIA,kBAAC,EAAD,CAAQU,QAASX,EAAMiE,IACnBhE,UAAU,QADd,WC6GGiE,E,4MAjHX7C,MAAQ,CACJ8C,MAAM,EACNC,eAAgB,EAChBC,EAAG,KACHC,EAAG,M,EAGPC,YAAc,WACN,EAAKlD,MAAM8C,MACX,EAAKnE,MAAMwE,WAAW,EAAI,EAAKnD,MAAM+C,eAAgB,KACrD,EAAKK,SAASC,cAEd,EAAK1E,MAAM2E,QAAQ,GACnB,EAAKF,SAASG,aAElB,EAAKC,UAAS,SAACC,GAAW,MAAO,CAAEX,MAAOW,EAAKX,U,EAGnDY,YAAc,WACV,EAAK/E,MAAMgF,eAAeC,KAAQ,EAAK5D,MAAM,IAAM,EAAKA,MAAM,GAAM,EAAKA,MAAM,GAAK,QAAU,EAAKA,MAAM,GAAK,GAC9G,EAAKrB,MAAMkF,UAAU,EAAKlF,MAAMgF,gBAChC,EAAKhF,MAAMyD,c,uDAIL,IAAD,OAEC0B,EAAE,eAAQnE,KAAKhB,MAAMgF,gBACrBI,EAAE,YAAOpE,KAAKhB,MAAMqF,QAEpBC,EAAkB5C,OAAOC,KAAKwC,EAAGI,aAAa3C,KAAI,SAAAC,GAAE,OACtD,kBAAC,EAAD,CACI2C,IAAK3C,EACLkB,gBAAiB,EAAK/D,MAAMyF,iBAAiB5C,GAC7CgB,KAAMhB,EACN6C,MAAOP,EAAGO,MACV5B,OAAQqB,EAAGI,YAAY1C,GAAMsC,EAAGQ,MAAM9C,GACtCoB,IAAK,kBAAM,EAAKjE,MAAM4F,OAAO/C,IAC7BmB,OAAQ,kBAAM,EAAKhE,MAAM6F,UAAUhD,SAIrCwC,EAASD,EAAGxC,KAAI,SAACkD,EAAKC,GAAN,OAClB,yBAAKP,IAAKM,EAAKtF,MAAO,CAAEwF,MAAO,SACzBF,EAAIlD,KAAI,SAAAC,GAAE,OACR,kBAAC,EAAD,CACIrC,MAAO,EAAKa,MAAM0E,KAAOlD,EAAK,CAAE9B,MAAO,OAAU,KACjDyE,IAAK3C,EACLlC,QAAS,WAAQ,EAAKkE,SAAL,eAAiBkB,EAAIlD,MACxCA,UAQd,OACI,yBAAK5C,UAAU,gBACX,kBAAC,IAAD,CAAUgG,IAAK,SAAAA,GAAG,OAAK,EAAKxB,SAAWwB,GACnCC,aAAa,EACbC,kBAAkB,EAClBC,YAAY,EACZC,YAAY,GAEZ,yBAAKpG,UAAU,WAEX,yBAAKqG,IAAKnB,EAAGoB,IAAKC,IAAKrB,EAAGtB,OAE1B,yBAAK5D,UAAU,mBACVqF,GAGL,uBAAG9E,MAAO,CAAEiG,OAAQ,SAApB,oBAA+C,+BAAKtB,EAAGO,MAAMxE,QAAQ,KAErE,kBAAC,EAAD,CACIP,QAASK,KAAK+D,aADlB,eAGA,kBAAC,EAAD,CACIpE,QAASK,KAAKuD,aADlB,aAKJ,yBAAKtE,UAAU,UAAUO,MAAO,CAAEkG,QAAQ,GAAD,OAAM1F,KAAKK,MAAM8C,KAAgB,QAAT,UAE7D,yBAAKlE,UAAU,UACVoF,GAGL,yBAAKpF,UAAU,KAEX,uBAAGO,MAAO,CAAEiG,OAAQ,SAApB,mBAA8C,2BAAItB,EAAGO,MAAMxE,QAAQ,KAEnE,kBAAC,EAAD,CACIP,QAASK,KAAKuD,aADlB,eAGA,kBAAC,EAAD,CACI3D,WAAYI,KAAKK,MAAM,IAAML,KAAKK,MAAM,IACxCV,QAASK,KAAK+D,aAFlB,uB,GAlGD5D,aCGrBwF,E,4MAEFtF,MAAQ,CACJuF,OAAO,EACPC,MAAO,M,EAaX9B,YAAc,SAAC+B,GACX,EAAK9G,MAAMkF,UAAU4B,I,EAGzBC,iBAAmB,SAAClE,GAChB,EAAKgC,UAAS,SAACmC,GACX,MAAO,CAAEC,SAAUD,EAAUC,QAASJ,MAAOhE,O,EAIrDqE,aAAe,WACX,EAAKrC,UAAS,SAACmC,GACX,MAAO,CAAEJ,OAAQI,EAAUJ,W,EAInCO,aAAe,SAACnF,GACZ,EAAK6C,SAAS,CAAE+B,OAAO,IACvB,EAAK5G,MAAM+B,aAAaC,I,kEA3BxBhB,KAAKhB,MAAMoH,QAAQpG,KAAKhB,MAAMqH,MAAMC,Q,yCAGrBC,GACXA,EAAUF,MAAMC,OAAStG,KAAKhB,MAAMqH,MAAMC,MAC1CtG,KAAKhB,MAAMoH,QAAQpG,KAAKhB,MAAMqH,MAAMC,Q,+BAyBlC,IAMFE,EANC,OAEDC,EAAOzG,KAAKhB,MAAM4B,SAChB,uBAAGpB,MAAO,CAAEkH,UAAW,WAAa1G,KAAKhB,MAAM4B,UAC/C,kBAAC,EAAD,MA0CN,OAtCwB,OAApBZ,KAAKhB,MAAMyH,OACXA,EACI,kBAAC,IAAMjE,SAAP,KACI,yBAAKvD,UAAU,YACVe,KAAKhB,MAAMyH,KAAK7E,KAAI,SAAAC,GAAE,OACnB,kBAAC,EAAD,CAAM2C,IAAK3C,EAAGgB,KACV5D,UAAS,mBAAc4C,EAAGiE,KAAK,EAAKzF,MAAMwF,OAAS,KAEnDzD,eAAgB,kBAAI,EAAKyB,SAAS,CAACgC,MAAO,SAG1C,4BAAKhE,EAAGgB,MAER,yBAAKyC,IAAKzD,EAAG0D,IAAKC,IAAK3D,EAAGgB,OAE1B,6BAEa,WAAZhB,EAAGnC,KACE,kBAAC,EAAD,CAAQC,QAAS,kBAAM,EAAKwG,aAAatE,KAAzC,UACA,kBAAC,EAAD,CACEjC,SAAU,EAAKS,MAAMwF,MACrBlG,QAAS,WAAQ,EAAKX,MAAMkF,UAAUrC,GAAK,EAAKkE,iBAAiBlE,EAAGiE,MAFtE,WAGQjE,EAAG6C,MAHX,YAa1B1E,KAAKK,MAAMuF,QACXY,EACI,kBAAC,EAAD,iBAAkBxG,KAAKhB,MAAvB,CAA8ByD,WAAczC,KAAKkG,iBAKrD,kBAAC,IAAM1D,SAAP,KAEKxC,KAAKK,MAAMuF,OACR,kBAAC,EAAD,CAAOtD,KAAMtC,KAAKK,MAAMuF,MAAOnD,WAAYzC,KAAKkG,cAC3CM,GAIRC,O,GA7FMtG,aA+HRC,eAzBS,SAACC,EAAOC,GAC5B,MAAO,CACHmG,KAAMpG,EAAMoG,KAAKA,KACjBzC,eAAgB3D,EAAMmB,MAAMwC,eAC5BS,iBAAkBpE,EAAMmB,MAAMiD,iBAC9BJ,OAAQhE,EAAMmB,MAAM6C,OACpB9D,KAAMF,EAAME,KAAKA,KACjBN,WAAYI,EAAME,KAAKN,WACvBW,SAAUP,EAAMoG,KAAK7F,aAIF,SAACM,EAAUZ,GAClC,MAAO,CACH8F,QAAS,SAACO,GAAD,OAAiBzF,GV5GV0F,EU4G2CD,EV3GxD,SAAAzF,GACHT,EAAMa,IAAN,UAAasF,EAAb,UACKxF,MAAK,SAAAG,GACFL,EAlBL,CACHxB,KCJiB,YDKjB+G,KAgB0BlF,EAAIE,UAEzBM,OAAM,SAAAlB,GACHmB,QAAQC,IAAIpB,GACZK,EAASN,EAASC,EAAIqB,gBARf,IAAC0E,GU6GhB7F,aAAc,SAACC,GAAD,OAAYE,EAAS2F,EAA6B7F,KAChE4D,OAAQ,SAACkC,GAAD,OAAS5F,ERtHH,SAAC4F,GACnB,MAAO,CACHpH,KDFsB,iBCGtBqH,eAAgBD,GQmHUD,CAAuBC,KACjDjC,UAAW,SAACiC,GAAD,OAAS5F,ERhHH,SAAC4F,GACtB,MAAO,CACHpH,KDRyB,oBCSzBqH,eAAgBD,GQ6GaD,CAA0BC,KACvDnD,QAAS,SAACe,EAAOT,GAAR,OAAiB/C,ER1GX,SAACwD,EAAOT,GAC3B,MAAO,CACHvE,KDnBgB,WCoBhBgF,MAAOA,GQuG4BmC,CAAwBnC,KAC3DlB,WAAY,SAACkB,EAAOT,EAAM+C,GAAd,OAA6B9F,ERpGvB,SAACwD,EAAOT,EAAM+C,GACpC,MAAO,CACHtH,KDzBmB,cC0BnBgF,MAAOA,EACPT,KAAMA,EACN+C,WAAYA,GQ+FsCH,CAA2BnC,EAAOT,EAAM+C,KAC1F9C,UAAW,SAAC+C,GAAD,OAAU/F,EPhHJ,SAAC+F,GACtB,MAAO,CACHvH,KFlBmB,cEmBnBuH,KAAMA,GO6GwBJ,CAA0BI,QAKjD7G,CAA6CuF,GCjItDuB,G,kNAEF7G,MAAQ,CACJ8G,SAAS,EACTvB,OAAO,G,EAGXM,aAAe,WACX,EAAKrC,UAAS,SAACmC,GACX,MAAO,CAAEJ,OAAQI,EAAUJ,UAE/B,EAAK5G,MAAMoI,iB,uDAIL,IAAD,OAECC,EAAqB,YAAIrH,KAAKhB,MAAMuB,MAAMqB,KAAI,SAAAC,GAChD,IAAM8C,EAAoB,WAAZ9C,EAAGnC,MAAqBgC,OAAOC,KAAKE,EAAG8C,OAAO2C,QAAO,SAACC,EAAKxC,GAGrE,OAFoB,IAAhBlD,EAAG8C,MAAMI,KACTwC,EAAIxC,GAAKlD,EAAG8C,MAAMI,IACfwC,IACR,IAEH,MAAO,CACH1E,KAAMhB,EAAGgB,KACTnD,KAAMmC,EAAGnC,KACTuE,KAAMpC,EAAGoC,MAAQ,GACjBU,MAAmB,WAAZ9C,EAAGnC,KAAH,eAA4BiF,GAAU,GAC7C7B,OAAQjB,EAAGiB,WAIb0E,EACFxH,KAAKhB,MAAMuB,KAAKqB,KAAI,SAACC,EAAI4F,GAAL,OAEhB,kBAAC,EAAD,CAAMxI,UAAU,WAAWuF,IAAK3C,EAAGgB,KAAO4E,GACtC,6BACI,4BAAK5F,EAAGgB,MACR,2BAAIhB,EAAGoC,MACP,yBAAKqB,IAAKzD,EAAG0D,IAAKC,IAAK3D,EAAGgB,QAG9B,yBAAK5D,UAAU,eACX,6BACI,qCAAU,2BAAI4C,EAAG6C,MAAMxE,QAAQ,GAArB,MACV,uCAAY,2BAAI2B,EAAGiB,SACnB,yBAAKtD,MAAO,CAAEkG,QAAS,OAAQgC,eAAgB,SAAUC,aAAc,SACnE,kBAAC,EAAD,CAAQhI,QAAS,kBAAM,EAAKX,MAAM4I,aAAa/F,EAAI4F,KAAnD,UACA,kBAAC,EAAD,CAAQ9H,QAAS,kBAAM,EAAKX,MAAM6I,eAAehG,EAAI4F,KAArD,QAGJ,4CAAiB,4BAAK5F,EAAGiB,OAASjB,EAAG6C,OAAOxE,QAAQ,GAAnC,MACjB,wBAAIV,MAAO,CAAEmI,aAAc,WACtB9F,EAAG8C,OACGjD,OAAOC,KAAKE,EAAG8C,OACb/C,KAAI,SAAAkG,GAAE,OAAqB,IAAjBjG,EAAG8C,MAAMmD,GACd,wBAAItD,IAAKsD,GACNA,EAAK,MAASjG,EAAG8C,MAAMmD,IAE1B,UAItB,kBAAC,EAAD,CAAQnI,QAAS,kBAAM,EAAKX,MAAM+I,eAAelG,EAAI4F,KAArD,eAMhB,OAA+B,IAA3BzH,KAAKhB,MAAMuB,KAAKuB,OAEZ,mDAMA,kBAAC,IAAMU,SAAP,KAGI,kBAAC,EAAD,CAAQ5C,SAAUI,KAAKK,MAAM8G,UAAYnH,KAAKhB,MAAM8B,MAChDnB,QAAS,WACL,EAAKX,MAAMiC,SAASoG,GACpB,EAAKxD,SAAS,CAAEsD,SAAS,EAAMvB,OAAO,MAH9C,cAMG5F,KAAKK,MAAMuF,OAAS5F,KAAKhB,MAAMwC,OAAUxB,KAAKhB,MAAM8B,QACnD,kBAAC,EAAD,CAAOwB,KAAMtC,KAAKK,MAAMuF,MAAOnD,WAAYzC,KAAKkG,cAC3ClG,KAAKhB,MAAM8B,MACN,2BAAId,KAAKhB,MAAM8B,OACf,mDAAyBd,KAAKhB,MAAMwC,MAApC,MAId,yBAAKvC,UAAU,YAEVuI,Q,GAjGNrH,cAgIJC,eArBS,SAACC,EAAOC,GAC5B,MAAO,CACHC,KAAMF,EAAME,KAAKA,KACjByD,eAAgB3D,EAAMmB,MAAMwC,eAC5BxC,MAAOnB,EAAME,KAAKiB,MAClBV,MAAOT,EAAMoG,KAAK7F,aAIC,SAACM,EAAUZ,GAClC,MAAO,CACHS,aAAc,SAACC,GAAD,OAAYE,EAAS2F,EAA6B7F,KAChE4G,aAAc,SAAC9C,EAAKC,GAAN,OAAY7D,ER1HvB,CACHxB,KFOqB,gBENrBuH,KQwHgEnC,ERvHhE2C,MQuHqE1C,KACrE8C,eAAgB,SAAC/C,EAAKC,GAAN,OAAY7D,ERnHzB,CACHxB,KFAuB,kBECvBuH,KQiHoEnC,ERhHpE2C,MQgHyE1C,KACzEgD,eAAgB,SAACd,EAAMQ,GAAP,OAAiBvG,ERtGX,SAACF,EAAQyG,GACnC,MAAO,CACH/H,KFxBwB,mBEyBxBsB,OAAQA,EACRyG,MAAOA,GQkGmCZ,CAA+BI,EAAMQ,KAC/ExG,SAAU,SAACV,GAAD,OAAUW,EAAS2F,EAAyBtG,KACtD6G,cAAe,kBAAMlG,ERvFlB,CACHxB,KF5BuB,wBUuHhBU,CAA6C8G,GC/G7Cc,MAlBf,WACI,OACI,0BAAM/I,UAAU,YACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqH,KAAM,CAAC,YAAa2B,UAAWC,IAEtC,kBAAC,IAAD,CAAO5B,KAAK,UAAU2B,UAAWC,IAEjC,kBAAC,IAAD,CAAO5B,KAAK,UAAU2B,UAAWC,IAEjC,kBAAC,IAAD,CAAO5B,KAAK,QAAQ2B,UAAWf,IAE/B,kBAAC,IAAD,CAAUhI,GAAG,gBCAdiJ,E,uKAVT,OACG,kBAAC,IAAD,KACG,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALMhI,aCNZiI,EAAY,CACd3B,KAAM,KAeN7F,SAAU,MA4BCyH,EAxBC,WAAgC,IAA/BhI,EAA8B,uDAAtB+H,EAAW7I,EAAW,uCAC3C,OAAQA,EAAOG,MAEX,IbzBa,Qa0BT,OAAO,2BACAW,GADP,IAEIO,SAAUrB,EAAOuB,QAIzB,Ib9BiB,Ya+Bb,IAAMwH,EAAO,YAAO/I,EAAOkH,MAE3B,OADA6B,EAAQ1G,KAAI,SAAAC,GAAE,OAAIA,EAAGiB,OAAS,KACvB,2BACAzC,GADP,IAEIoG,KAAM6B,EACN1H,SAAU,OAGlB,QACI,OAAOP,ICxCb+H,EAAY,CACdpE,eAAgB,KAChBS,iBAAkB,CACd8D,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,EACNC,OAAQ,GAEZtE,OAAQ,CACJ,CAAC,YAAa,QAAS,UACvB,CAAC,eAAgB,kBAInBuE,EAAmB,CACrBF,KAAM,EACNF,MAAO,EACPC,OAAQ,EACRE,OAAQ,EACRJ,MAAO,GA0EIF,EAvEC,WAAgC,IAA/BhI,EAA8B,uDAAtB+H,EAAW7I,EAAW,uCAC3C,OAAQA,EAAOG,MAEX,IdzBuB,kBc0BnB,OAAO,2BACAW,GADP,IAEI2D,eAAe,2BACRzE,EAAOyB,QADA,IAEViD,KAAM,KACNU,MAAM,eAAMiE,OAIxB,Id3BsB,iBc6BlB,OAAO,2BACAvI,GADP,IAEI2D,eAAe,2BACR3D,EAAM2D,gBADC,IAEVW,MAAM,2BACCtE,EAAM2D,eAAeW,OADvB,kBAEApF,EAAOwH,eAAiB1G,EAAM2D,eAAeW,MAAMpF,EAAOwH,gBAAkB,IAEjFrC,MAAQrE,EAAM2D,eAAeW,MAAMpF,EAAOwH,iBAAmB,EAAI1G,EAAM2D,eAAeU,MAAQrE,EAAMoE,iBAAiBlF,EAAOwH,gBAAkB1G,EAAM2D,eAAeU,UAK/K,IdzCyB,oBc0CrB,OAAO,2BACArE,GADP,IAEI2D,eAAe,2BACR3D,EAAM2D,gBADC,IAEVW,MAAM,2BACCtE,EAAM2D,eAAeW,OADvB,kBAEApF,EAAOwH,eAAiB1G,EAAM2D,eAAeW,MAAMpF,EAAOwH,gBAAkB,IAEjFrC,MAAQrE,EAAM2D,eAAeW,MAAMpF,EAAOwH,gBAAkB,EAAI1G,EAAM2D,eAAeU,MAAQrE,EAAMoE,iBAAiBlF,EAAOwH,gBAAkB1G,EAAM2D,eAAeU,UAK9K,Id3DgB,Wc4DZ,OAAO,2BACArE,GADP,IAEI2D,eAAe,2BACR3D,EAAM2D,gBADC,IAEVnB,KAAMxC,EAAM2D,eAAenB,KAAO,QAClC6B,MAAOrE,EAAM2D,eAAeU,MAAQnF,EAAOmF,UAMvD,IdtEmB,ccuEf,OAAO,2BACArE,GADP,IAEI2D,eAAe,2BACR3D,EAAM2D,gBADC,IAEVnB,KAAMxC,EAAM2D,eAAenB,KAAKgG,QAAQ,QAAS,IACjDnE,MAAOnF,EAAOyH,YAAc3G,EAAM2D,eAAeU,MAAQnF,EAAOmF,MAChET,KAAM,OAIlB,QACI,OAAO5D,ICzFb+H,EAAY,CACd7H,KAAM,GACNN,WAAY,EACZuB,MAAO,MA+EI6G,EA5EC,WAAgC,IAA/BhI,EAA8B,uDAAtB+H,EAAW7I,EAAW,uCAC3C,OAAQA,EAAOG,MAGX,IfEqB,gBeDjB,IAAIoJ,EAAoB,YAAOzI,EAAME,MAIrC,OAHAuI,EAAqBvJ,EAAOkI,OAAO3E,OAASgG,EAAqBvJ,EAAOkI,OAAO3E,OAAS,EAAI,EACtFgG,EAAqBvJ,EAAOkI,OAAO3E,OAAS,EAC5CgG,EAAqBC,OAAOxJ,EAAOkI,MAAO,GACzC,2BACApH,GADP,IAEIE,KAAK,YAAKuI,GACV7I,WAAYI,EAAMJ,YAAc,GAAKI,EAAMJ,WAAaV,EAAO0H,KAAKvC,QAG5E,IfRuB,kBeSnB,IAAIsE,EAAoB,YAAO3I,EAAME,MAErC,OADAyI,EAAqBzJ,EAAOkI,OAAO3E,OAASkG,EAAqBzJ,EAAOkI,OAAO3E,OAAS,EACjF,2BACAzC,GADP,IAEIE,KAAK,YAAKyI,GACV/I,WAAYI,EAAMJ,WAAaV,EAAO0H,KAAKvC,QAKnD,If7BmB,ce8Bf,IAAIuE,EAAC,YAAO5I,EAAME,MACd2I,EAAOD,EAAEC,MAAK,SAAAC,GAAC,MAAe,WAAXA,EAAEzJ,MAAqByJ,EAAErD,KAAOvG,EAAO0H,KAAKnB,MAOnE,YANasD,IAATF,EACAD,EAAEI,KAAK9J,EAAO0H,MAEdgC,EAAErH,KAAI,SAAAC,GAAE,OAAIA,EAAGiE,KAAOoD,EAAKpD,GAAMjE,EAAGiB,OAASjB,EAAGiB,OAAS,EAAKjB,EAAGiB,UAG9D,2BACAzC,GADP,IAEIE,KAAK,YAAK0I,GACVhJ,WAAYI,EAAMJ,WAAaV,EAAO0H,KAAKvC,QAInD,If5CwB,mBe6CpB,OAAO,2BACArE,GADP,IAEIE,KAAMF,EAAME,KAAK+I,QAAO,SAACC,EAAG9B,GAAJ,OAAclI,EAAOkI,QAAUA,KACvDxH,WAAYI,EAAMJ,YAAc,GAAKI,EAAMJ,WAAcV,EAAOyB,OAAO0D,MAAQnF,EAAOyB,OAAO8B,SAIrG,IfzCiB,Ye0Cb,OAAO,2BACAzC,GADP,IAEImB,MAAOjC,EAAOiC,MACdZ,SAAU,OAGlB,If/CuB,kBegDnB,IAAKP,EAAMO,SACP,OAAO,2BACAP,GADP,IAEIE,KAAM,GACNN,WAAY,EACZ+D,eAAgB,KAChBxC,MAAO,KACPZ,SAAU,OAGlB,MAEJ,QACI,OAAOP,ICnECmJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DCLN,IAAMuD,EAAcC,YAAgB,CAClCrI,MAAOsI,EACPrD,KAAOsD,EACPxJ,KAAMyJ,IAGFC,EAAQC,YAAYN,EAAaO,YAAgBC,MAEvDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SD0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvJ,MAAK,SAAAwJ,GACJA,EAAaC,gBAEd9I,OAAM,SAAAjB,GACLkB,QAAQlB,MAAMA,EAAMoB,c","file":"static/js/main.d3c008db.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport './NavItem.css'\n\nfunction NavItem(props) {\n    return (\n        <li className='NavItem'>\n            <NavLink to={props.to} exact>\n                {props.children}\n            </NavLink>\n        </li>\n    )\n}\n\nexport default NavItem","import React from 'react'\n\nimport './NavLinks.css'\nimport NavItem from './NavItem'\n\nfunction NavLinks() {\n    return (\n        <ul className='NavItems'>\n            <NavItem to='/burgers'>\n                Burgers\n           </NavItem>\n            <NavItem to='/drinks'>\n                Drinks\n           </NavItem>\n            <NavItem to='/snacks'>\n                Snacks\n           </NavItem>\n        </ul>\n\n    )\n}\n\nexport default NavLinks\n","import React from 'react'\nimport {Link} from 'react-router-dom';\n\nimport './Button.css'\n\nexport default props => {\n\n  if (props.href) {\n    return (\n      <a href={props.href} className={`Button Button-${props.action || 'default'}`} style={props.style}>\n        {props.children}\n      </a>\n    );\n  }\n\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`Button Button-${props.action || 'default'}`}\n        style={props.style}>\n        {props.children}\n      </Link>\n    );\n  }\n\n  return (\n    <button\n      className={`Button Button-${props.action || 'default'} ${props.d && 'f'}`}\n      type={props.type}\n      style={props.style}\n      onClick={props.onClick}\n      disabled={props.disabled}>\n      {props.children}\n    </button>\n  );\n\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Header.css'\n// import SideDrawer from './SideDrawer'\nimport NavLinks from './NavLinks'\nimport Button from '../UI/Button/Button'\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <Button to='/burger' style={{ padding: '0' }} action='HeaderBTN' ><h1>KING</h1></Button>\n                <NavLinks />\n                <Button action='toCart' style={{ color: 'white' }} to='/cart'> total: {this.props.totalPrice.toFixed(2)}$</Button>\n            </header>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        totalPrice: state.cart.totalPrice\n    }\n}\n\nexport default connect(mapStateToProps)(Header)\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL : 'https://selfcheckout-5c223.firebaseio.com/'\n})\n\nexport default instance","import * as actionType from './actionTypes'\nimport axios from '../../axios'\n\n\nexport const showMenu = (menu) => {\n    return {\n        type: actionType.SHOW_MENU,\n        menu: menu\n    }\n}\n\nexport const errorMSG = (err) => {\n    return {\n        type: actionType.ERROR,\n        error: err\n    }\n}\n\n\nexport const setMenu = (menu_section) => {\n    return dispatch => {\n        axios.get(`${menu_section}.json`)\n            .then(res => {\n                dispatch(showMenu(res.data))\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(errorMSG(err.message))\n            })\n    }\n}","export const ERROR = 'ERROR'\n\nexport const SHOW_MENU = 'SHOW_MENU'\nexport const SELECTED_BURGER = 'SELECTED_BURGER'\n\nexport const ADD_TO_CART = 'ADD_TO_CART'\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART'\n\nexport const GET_MEAL = 'GET_MEAL'\nexport const REMOVE_MEAL = 'REMOVE_MEAL'\n\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\n\nexport const REDUCE_AMOUNT = 'REDUCE_AMOUNT'\nexport const INCREASE_AMOUNT = 'INCREASE_AMOUNT'\n\nexport const CHECK_OUT = 'CHECK_OUT'\nexport const CLOSE_CHECK_OUT = 'CLOSE_CHECK_OUT'","import * as actionType from './actionTypes'\n// import axios from '../../axios'\n\n\nexport const selectBurger = (burger) => {\n    return {\n        type: actionType.SELECTED_BURGER,\n        burger: burger\n    }\n}\n\nexport const addIng = (ing) => {\n    return {\n        type: actionType.ADD_INGREDIENT,\n        ingredientName: ing\n    }\n}\n\nexport const removeIng = (ing) => {\n    return {\n        type: actionType.REMOVE_INGREDIENT,\n        ingredientName: ing\n    }\n}\n\nexport const getMeal = (price, note) => {\n    return {\n        type: actionType.GET_MEAL,\n        price: price,\n    }\n}\n\nexport const removeMeal = (price, note, resetPrice) => {\n    return {\n        type: actionType.REMOVE_MEAL,\n        price: price,\n        note: note,\n        resetPrice: resetPrice\n    }\n}","import * as actionType from './actionTypes'\nimport {errorMSG} from './menuActions'\nimport axios from '../../axios'\n\n\nexport const reduceAmount = (item, index) => {\n    return {\n        type: actionType.REDUCE_AMOUNT,\n        item: item,\n        index: index\n    }\n}\n\nexport const increaseAmount = (item, index) => {\n    return {\n        type: actionType.INCREASE_AMOUNT,\n        item: item,\n        index: index\n    }\n}\n\nexport const addToCart = (item) => {\n    return {\n        type: actionType.ADD_TO_CART,\n        item: item\n    }\n}\n\nexport const deleteFromCart = (burger, index) => {\n    return {\n        type: actionType.DELETE_FROM_CART,\n        burger: burger,\n        index: index\n    }\n}\n\nexport const checkOutCart = (order) => {\n    const ord = Object.keys(order).map(el => el)\n    return {\n        type: actionType.CHECK_OUT,\n        order: ord.length\n    }\n}\n\nexport const closeCheckOutCart = () => {\n    return {\n        type: actionType.CLOSE_CHECK_OUT,\n    }\n}\n\nexport const checkOut = (cart) => {\n\n    return dispatch => {\n        axios.post('/orders.json', cart)\n        .then(result=>{\n            axios.get('/orders.json')\n            .then(res => {\n                dispatch(checkOutCart(res.data))\n            })\n            .catch(err => {\n                console.log(err);\n                dispatch(errorMSG(err.message))\n            })\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(errorMSG(err.message))\n        })\n    \n    }\n}","import React from 'react'\n\nimport './Card.css'\n\nfunction Card(props) {\n    return (\n        <div className={`Card ${props.className}`} onAnimationEnd= {props.onAnimationEnd}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\n\nimport './Backdrop.css'\n\nconst backdrop = (props) => {\n   return props.show  \n    ? <div className=\"Backdrop\" onClick={props.onClick}> </div>  \n    : null \n}\n\nexport default backdrop","import React from 'react'\n\nimport './Modal.css'\nimport Backdrop from '../BackDrop/Backdrop'\n\nfunction Modal(props) {\n    return (\n        <React.Fragment>\n            <Backdrop show={props.show} onClick={props.closeModal} />\n            <div\n                style={{ transform: props.show ? 'translateY(0)' : 'translateY(-100vh)' }}\n                className='Modal'>\n                <span className='c' onClick={props.closeModal}>\n                    <span className='close'> X </span>\n                </span>\n                {props.children}\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default Modal","import React from 'react'\nimport './Spinner.css'\n\nfunction Spinner() {\n    return (\n        <div className=\"loader\">Loading...</div> \n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport Button from '../../UI/Button/Button'\n\n\nconst Ingredients = (props) => (\n\n    <div className='Ingredient'>\n        <div className='Label'>{props.name} : {props.amount}</div>\n        <p>price: {props.ingredientPrice}$</p>\n        <div>\n            <Button onClick={props.remove}\n                disabled={props.amount <= 0}\n                className='Less'>remove</Button>\n\n            <Button onClick={props.add}\n                className='More'>add</Button>\n        </div>\n    </div>\n\n)\n\n\nexport default Ingredients","import React, { Component } from 'react'\nimport Carousel from 'react-elastic-carousel';\n\nimport './BurgerConfig.css'\nimport Ingredients from './Ingredients'\nimport Button from '../../UI/Button/Button'\n\n\nclass BurgerConfig extends Component {\n\n    state = {\n        meal: false,\n        extraMealPrice: 0,\n        0: null,\n        1: null,\n    }\n\n    mealHandler = () => {\n        if (this.state.meal) {\n            this.props.removeMeal(3 + this.state.extraMealPrice, ' ')\n            this.carousel.slidePrev()\n        } else {\n            this.props.addMeal(3)\n            this.carousel.slideNext()\n        }\n        this.setState((prev) => { return { meal: !prev.meal } })\n    }\n\n    cartHandler = () => {\n        this.props.selectedBurger.note = (this.state[0] && this.state[1]) ? this.state[0] + \" and \" + this.state[1] : ''\n        this.props.addToCart(this.props.selectedBurger);\n        this.props.closeModal()\n    }\n\n\n    render() {\n\n        const sB = { ...this.props.selectedBurger };\n        const at = [...this.props.ateria]\n\n        const ingredientsList = Object.keys(sB.ingredients).map(el => (\n            <Ingredients\n                key={el}\n                ingredientPrice={this.props.ingredientPrices[el]}\n                name={el}\n                price={sB.price}\n                amount={sB.ingredients[el] + sB.extra[el]}\n                add={() => this.props.addIng(el)}\n                remove={() => this.props.removeIng(el)}\n            />\n        ))\n\n        const ateria = at.map((itm, i) => (\n            <div key={itm} style={{ width: '100%' }}>\n                { itm.map(el => (\n                    <Button\n                        style={this.state[i] === el ? { color: 'red' } : null}\n                        key={el}\n                        onClick={() => { this.setState({ [i]: el }) }}\n                    >{el}\n                    </Button>\n                ))}\n            </div>\n        ))\n\n\n\n        return (\n            <div className='BurgerConfig'>\n                <Carousel ref={ref => (this.carousel = ref)}\n                    enableSwipe={false}\n                    enableMouseSwipe={false}\n                    pagination={false}\n                    showArrows={false}>\n\n                    <div className='Confing'>\n\n                        <img src={sB.img} alt={sB.name} />\n\n                        <div className='IngredientsList'>\n                            {ingredientsList}\n                        </div>\n\n                        <p style={{ margin: '2rem' }}>Price of Burger :<b> {sB.price.toFixed(2)}</b></p>\n\n                        <Button\n                            onClick={this.cartHandler}\n                        >Add to Cart</Button>\n                        <Button\n                            onClick={this.mealHandler}\n                        >Get Meal</Button>\n                    </div>\n\n                    <div className='Confing' style={{ display: `${!this.state.meal ? 'none' : 'block'}` }}>\n\n                        <div className='Ateria'>\n                            {ateria}\n                        </div>\n\n                        <div className='o'>\n\n                            <p style={{ margin: '2rem' }}>Price of Meal : <b>{sB.price.toFixed(2)}</b></p>\n\n                            <Button\n                                onClick={this.mealHandler}\n                            >Remove Meal</Button>\n                            <Button\n                                disabled={!(this.state[0] && this.state[1])}\n                                onClick={this.cartHandler}\n                            >Add to Cart</Button>\n                        </div>\n                    </div>\n\n                </Carousel>\n            </div>\n        )\n    }\n}\n\n\n\n\n\nexport default BurgerConfig","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Menu.css'\nimport * as menuPageActions from '../../store/actions/index'\nimport Card from '../../UI/Card/Card'\nimport Modal from '../../UI/Modal/Modal'\nimport Spinner from '../../UI/Spinner/Spinner'\nimport Button from '../../UI/Button/Button'\nimport BurgerConfig from '../BurgerConfig/BurgerConfig'\n\nclass MenuList extends Component {\n\n    state = {\n        modal: false,\n        added: null\n    }\n\n    componentDidMount() {\n        this.props.setMenu(this.props.match.path)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.path !== this.props.match.path) {\n            this.props.setMenu(this.props.match.path)\n        }\n    }\n\n    cartHandler = (id) => {\n        this.props.addToCart(id)\n    }\n\n    animationHandler = (el) => {\n        this.setState((prevState) => {\n            return { animate: !prevState.animate, added: el }\n        })\n    }\n\n    modalHandler = () => {\n        this.setState((prevState) => {\n            return { modal: !prevState.modal }\n        })\n    }\n\n    configBurger = (burger) => {\n        this.setState({ modal: true })\n        this.props.selectBurger(burger)\n    }\n\n    render() {\n\n        let menu = this.props.errorMSG\n            ? <p style={{ textAlign: 'center' }}>{this.props.errorMSG}</p>\n            : <Spinner />\n\n        let modalMenu;\n\n        if (this.props.menu !== null) {\n            menu = (\n                <React.Fragment>\n                    <div className='MenuList'>\n                        {this.props.menu.map(el => (\n                            <Card key={el.name} \n                                className={`MenuItem ${el.id===this.state.added && 'g'}`}\n\n                                onAnimationEnd={()=>this.setState({added: null})}\n                               >\n\n                                <h2>{el.name}</h2>\n\n                                <img src={el.img} alt={el.name} />\n\n                                <br />\n\n                                {el.type === 'burger'\n                                    ? <Button onClick={() => this.configBurger(el)}>Select</Button>\n                                    : <Button\n                                        disabled={this.state.added}\n                                        onClick={() => { this.props.addToCart(el); this.animationHandler(el.id) }}\n                                    >Buy for {el.price}$</Button>\n                                }\n\n                            </Card>\n                        ))}\n                    </div>\n\n                </React.Fragment >\n            )\n        }\n        if (this.state.modal) {\n            modalMenu = (\n                <BurgerConfig {...this.props} closeModal = {this.modalHandler} />\n            )\n        }\n\n        return (\n            <React.Fragment>\n\n                {this.state.modal &&\n                    <Modal show={this.state.modal} closeModal={this.modalHandler}>\n                        {modalMenu}\n                    </Modal>\n                }\n\n                {menu}\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        menu: state.menu.menu,\n        selectedBurger: state.order.selectedBurger,\n        ingredientPrices: state.order.ingredientPrices,\n        ateria: state.order.ateria,\n        cart: state.cart.cart,\n        totalPrice: state.cart.totalPrice,\n        errorMSG: state.menu.errorMSG\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        setMenu: (menuSection) => dispatch(menuPageActions.setMenu(menuSection)),\n        selectBurger: (burger) => dispatch(menuPageActions.selectBurger(burger)),\n        addIng: (ing) => dispatch(menuPageActions.addIng(ing)),\n        removeIng: (ing) => dispatch(menuPageActions.removeIng(ing)),\n        addMeal: (price, note) => dispatch(menuPageActions.getMeal(price, note)),\n        removeMeal: (price, note, resetPrice) => dispatch(menuPageActions.removeMeal(price, note, resetPrice)),\n        addToCart: (item) => dispatch(menuPageActions.addToCart(item)),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuList)\n\n// export default FFF","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './Cart.css'\nimport Card from '../../UI/Card/Card'\nimport Button from '../../UI/Button/Button'\nimport Modal from '../../UI/Modal/Modal'\nimport * as menuPageActions from '../../store/actions/index'\n\nclass Cart extends Component {\n\n    state = {\n        process: false,\n        modal: false\n    }\n\n    modalHandler = () => {\n        this.setState((prevState) => {\n            return { modal: !prevState.modal }\n        })\n        this.props.closeCheckOut()\n\n    }\n\n    render() {\n\n        const orderConfiguration = [...this.props.cart].map(el => {\n            const extra = el.type === 'burger' && Object.keys(el.extra).reduce((obj, i) => {\n                if (el.extra[i] !== 0)\n                    obj[i] = el.extra[i]\n                return obj;\n            }, {});\n\n            return {\n                name: el.name,\n                type: el.type,\n                note: el.note || '',\n                extra: el.type === 'burger' ? { ...extra } : {},\n                amount: el.amount,\n            }\n        })\n\n        const cartContent = (\n            this.props.cart.map((el, index) => (\n\n                <Card className=\"CartCard\" key={el.name + index}>\n                    <div>\n                        <h3>{el.name}</h3>\n                        <p>{el.note}</p>\n                        <img src={el.img} alt={el.name} />\n                    </div>\n\n                    <div className='OrderConfig'>\n                        <div>\n                            <p>Price: <b>{el.price.toFixed(2)}$</b></p>\n                            <p>Amount : <b>{el.amount}</b></p>\n                            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '1rem' }}>\n                                <Button onClick={() => this.props.reduceAmount(el, index)}>Remove</Button>\n                                <Button onClick={() => this.props.increaseAmount(el, index)}>Add</Button>\n                            </div>\n\n                            <p>total price : <b>{(el.amount * el.price).toFixed(2)}$</b></p>\n                            <ul style={{ marginBottom: '0.5rem' }}>\n                                {el.extra\n                                    && Object.keys(el.extra)\n                                        .map(ex => el.extra[ex] !== 0\n                                            ? <li key={ex}>\n                                                {ex + ' : ' + (el.extra[ex])}\n                                            </li>\n                                            : null)}\n                            </ul>\n\n                        </div>\n                        <Button onClick={() => this.props.deleteFromCart(el, index)}>Delete</Button>\n                    </div>\n                </Card>\n            ))\n        )\n\n        if (this.props.cart.length === 0) {\n            return (\n                <h3>Your cart is empty!</h3>\n            )\n\n        } else {\n\n            return (\n                <React.Fragment>\n\n\n                    <Button disabled={this.state.process && !this.props.error}\n                        onClick={() => {\n                            this.props.checkOut(orderConfiguration);\n                            this.setState({ process: true, modal: true })\n                        }}>Check Out</Button>\n\n                    {((this.state.modal && this.props.order) || this.props.error) &&\n                        <Modal show={this.state.modal} closeModal={this.modalHandler}>\n                            {this.props.error\n                                ? <p>{this.props.error}</p>\n                                : <p>Your queue number is {this.props.order} </p>}\n                        </Modal>\n                    }\n\n                    <div className='CartList'>\n\n                        {cartContent}\n\n                    </div>\n\n                </React.Fragment >\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        cart: state.cart.cart,\n        selectedBurger: state.order.selectedBurger,\n        order: state.cart.order,\n        error: state.menu.errorMSG\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        selectBurger: (burger) => dispatch(menuPageActions.selectBurger(burger)),\n        reduceAmount: (itm, i) => dispatch(menuPageActions.reduceAmount(itm, i)),\n        increaseAmount: (itm, i) => dispatch(menuPageActions.increaseAmount(itm, i)),\n        deleteFromCart: (item, index) => dispatch(menuPageActions.deleteFromCart(item, index)),\n        checkOut: (cart) => dispatch(menuPageActions.checkOut(cart)),\n        closeCheckOut: () => dispatch(menuPageActions.closeCheckOutCart())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\n\nimport './ContentSection.css'\nimport Menu from './Menu/Menu'\nimport Cart from './Cart/Cart'\n\nfunction ContentSection() {\n    return (\n        <main className='MainMenu'>\n            <Switch>\n                <Route path={['/burgers']} component={Menu} />\n\n                <Route path='/drinks' component={Menu} />\n\n                <Route path='/snacks' component={Menu} />\n\n                <Route path='/cart' component={Cart} />\n\n                <Redirect to='/burgers' />\n            </Switch>\n        </main>\n    )\n}\n\nexport default ContentSection\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './App.css';\nimport Header from './Navigation/Header'\nimport ContentSection from './ContentSection/ContentSection'\n// import Footer from './Footer/Footer'\n\nclass App extends Component {\n   render() {\n      return ( \n         <BrowserRouter>\n            <Header />\n            <ContentSection />\n            {/* <Footer /> */}\n         </BrowserRouter>\n      )\n   }\n}\n\nexport default App;\n","import * as actionType from '../actions/actionTypes'\n\nconst initState = {\n    menu: null,\n    // selectedBurger: null,\n    // cart: [],\n    // totalPrice: 0,\n    // ingredientPrices: {  // can be defined with DB\n    //     salad: 0.4,\n    //     bacon: 0.9,\n    //     cheese: 0.7,\n    //     meat: 1,\n    //     onions: 1,\n    // },\n    // ateria: [\n    //     ['Coca-Cola', 'Fanta', 'Sprite'],\n    //     ['French fries', 'Sweet potato']\n    // ],\n    errorMSG: null,\n    // order: null\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n\n        case actionType.ERROR:\n            return {\n                ...state,\n                errorMSG: action.error\n            }\n\n\n        case actionType.SHOW_MENU:\n            const newMenu = [...action.menu]\n            newMenu.map(el => el.amount = 1)\n            return {\n                ...state,\n                menu: newMenu,\n                errorMSG: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer\n\n\n        // case actionType.ADD_INGREDIENT:\n\n        //     return {\n        //         ...state,\n        //         selectedBurger: {\n        //             ...state.selectedBurger,\n        //             extra: {\n        //                 ...state.selectedBurger.extra,\n        //                 [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] + 1\n        //             },\n        //             price: (state.selectedBurger.extra[action.ingredientName] >= 0 ? state.selectedBurger.price + state.ingredientPrices[action.ingredientName] : state.selectedBurger.price),\n\n        //         }\n        //     }\n\n        // case actionType.REMOVE_INGREDIENT:\n        //     return {\n        //         ...state,\n        //         selectedBurger: {\n        //             ...state.selectedBurger,\n        //             extra: {\n        //                 ...state.selectedBurger.extra,\n        //                 [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] - 1\n        //             },\n        //             price: (state.selectedBurger.extra[action.ingredientName] > 0 ? state.selectedBurger.price - state.ingredientPrices[action.ingredientName] : state.selectedBurger.price)\n        //         }\n        //     }\n\n\n        // case actionType.GET_MEAL:\n        //     return {\n        //         ...state,\n        //         selectedBurger: {\n        //             ...state.selectedBurger,\n        //             price: state.selectedBurger.price + action.price,\n        //         }\n        //     }\n\n\n\n        // case actionType.REMOVE_MEAL:\n        //     return {\n        //         ...state,\n        //         selectedBurger: {\n        //             ...state.selectedBurger,\n        //             price: action.resetPrice || state.selectedBurger.price - action.price,\n        //             note: action.note\n        //         }\n        //     }\n\n\n        // case actionType.SELECTED_BURGER:\n        //     return {\n        //         ...state,\n        //         selectedBurger: {\n        //             ...action.burger,\n        //             extra: { ...extraIngredients }\n        //         }\n        //     }\n\n\n\n\n        // case actionType.REDUCE_AMOUNT:\n        //     let decreaseAmountInCart = [...state.cart]\n        //     decreaseAmountInCart[action.index].amount = decreaseAmountInCart[action.index].amount - 1 > 0\n        //         ? decreaseAmountInCart[action.index].amount - 1\n        //         : decreaseAmountInCart.splice(action.index, 1)\n        //     return {\n        //         ...state,\n        //         cart: [...decreaseAmountInCart],\n        //         totalPrice: state.totalPrice >= 0 && state.totalPrice - action.item.price\n        //     }\n\n\n\n        // case actionType.INCREASE_AMOUNT:\n        //     let increaseAmountInCart = [...state.cart]\n        //     increaseAmountInCart[action.index].amount = increaseAmountInCart[action.index].amount + 1\n        //     return {\n        //         ...state,\n        //         cart: [...increaseAmountInCart],\n        //         totalPrice: state.totalPrice + action.item.price\n        //     }\n\n\n        // case actionType.ADD_TO_CART:\n        //     let g = [...state.cart]\n        //     let find = g.find(x => x.type !== 'burger' && x.id === action.item.id);\n        //     if (find === undefined) {\n        //         g.push(action.item)\n        //     } else {\n        //         console.log(find);\n        //         g.map(el => el.id === find.id ? (el.amount = el.amount + 1) : el.amount);\n        //     }\n\n        //     return {\n        //         ...state,\n        //         cart: [...g],\n        //         totalPrice: state.totalPrice + action.item.price\n        //     }\n\n\n\n        // case actionType.DELETE_FROM_CART:\n        //     return {\n        //         ...state,\n        //         cart: state.cart.filter((_, index) => action.index !== index),\n        //         totalPrice: state.totalPrice >= 0 && state.totalPrice - (action.burger.price * action.burger.amount)\n        //     }\n\n        // case actionType.CHECK_OUT:\n        //     return {\n        //         ...state,\n        //         order: action.order,\n        //         errorMSG: null\n        //     }\n\n        // case actionType.CLOSE_CHECK_OUT:\n        //     if (!state.errorMSG) {\n        //         return {\n        //             ...state,\n        //             cart: [],\n        //             totalPrice: 0,\n        //             selectedBurger: null,\n        //             order: null,\n        //             errorMSG: null\n        //         }\n        //     }\n\n\n\n\n\n\n\n// switch (action.type) {\n\n//     case actionType.ADD_INGREDIENT:\n\n//         return {\n//             ...state,\n//             selectedBurger: {\n//                 ...state.selectedBurger,\n\n//                 // price: state.selectedBurger.price + prices[action.ingredientName],\n//                 // ingredients: {\n//                 //     ...state.selectedBurger.ingredients,\n//                 //     [action.ingredientName]: state.selectedBurger.ingredients[action.ingredientName] + 1  // нужно ли?????\n//                 // },\n\n//                 // ingredients: {\n//                 //     ...state.selectedBurger.ingredients,\n//                 //     [action.ingredientName]: (state.selectedBurger.extra[action.ingredientName] < 0 ? state.selectedBurger.ingredients[action.ingredientName] + 1 : state.selectedBurger.ingredients[action.ingredientName])\n//                 // },\n//                 extra: {\n//                     ...state.selectedBurger.extra,\n//                     [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] + 1\n//                     // [action.ingredientName]: (state.selectedBurger.extra[action.ingredientName] === undefined ?  1 : state.selectedBurger.extra[action.ingredientName] + 1 )\n//                 },\n//                 // price: (state.selectedBurger.extra[action.ingredientName] >= 0 || state.selectedBurger.extra[action.ingredientName] === undefined ? state.selectedBurger.price + prices[action.ingredientName]:  state.selectedBurger.price),\n//                 price: (state.selectedBurger.extra[action.ingredientName] >= 0 ? state.selectedBurger.price + state.ingredientPrices[action.ingredientName] : state.selectedBurger.price),\n\n//             }\n//         }\n\n//     case actionType.REMOVE_INGREDIENT:\n//         return {\n//             ...state,\n//             selectedBurger: {\n//                 ...state.selectedBurger,\n//                 price: (state.selectedBurger.extra[action.ingredientName] > 0 ? state.selectedBurger.price - state.ingredientPrices[action.ingredientName] : state.selectedBurger.price),\n//                 // ingredients: {\n//                 //     ...state.selectedBurger.ingredients,\n//                 //     [action.ingredientName]: (state.selectedBurger.extra[action.ingredientName] <= 0 ? state.selectedBurger.ingredients[action.ingredientName] - 1 : state.selectedBurger.ingredients[action.ingredientName])\n//                 // },\n//                 extra: {\n//                     ...state.selectedBurger.extra,\n//                     [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] - 1\n//                 }\n//             }\n//         }\n\n\n//     // case actionType.ADD_INGREDIENT:\n\n//     //     return {\n//     //         ...state,\n//     //         selectedBurger: {\n//     //             ...state.selectedBurger,\n//     //             // ingredients: {\n//     //             //     ...state.selectedBurger.ingredients,\n//     //             //     [action.ingredientName]:  (state.selectedBurger.extra[action.ingredientName] < 0 ? state.selectedBurger.ingredients[action.ingredientName] + 1 : state.selectedBurger.ingredients[action.ingredientName] )\n//     //             // },\n//     //             extra: {\n//     //                 ...state.selectedBurger.extra,\n//     //                 [action.ingredientName]:  state.selectedBurger.extra[action.ingredientName] + 1 \n//     //             },\n//     //             price: (state.selectedBurger.extra[action.ingredientName] >= state.selectedBurger.ingredients[action.ingredientName] ? state.selectedBurger.price + prices[action.ingredientName]:  state.selectedBurger.price),\n\n//     //         }\n//     //     }\n\n//     // case actionType.REMOVE_INGREDIENT:\n//     //     return {\n//     //         ...state,\n//     //         selectedBurger: {\n//     //             ...state.selectedBurger,\n//     //             price: (state.selectedBurger.extra[action.ingredientName] > state.selectedBurger.ingredients[action.ingredientName] ? state.selectedBurger.price - prices[action.ingredientName]:  state.selectedBurger.price),\n//     //             // ingredients: {\n//     //             //     ...state.selectedBurger.ingredients,\n//     //             //     [action.ingredientName]:  (state.selectedBurger.extra[action.ingredientName] <= 0 ? state.selectedBurger.ingredients[action.ingredientName] - 1 : state.selectedBurger.ingredients[action.ingredientName])\n//     //             // },\n//     //             extra: { //finalRecipe\n//     //                 ...state.selectedBurger.extra,\n//     //                 [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] - 1 \n//     //             }\n//     //         }\n//     //     }\n\n//     case actionType.GET_MEAL:\n//         return {\n//             ...state,\n//             selectedBurger: {\n//                 ...state.selectedBurger,\n//                 price: state.selectedBurger.price + action.price,\n//                 note: state.selectedBurger.note ? state.selectedBurger.note.concat(', ' + action.note) : action.note\n//             }\n//             // totalPrice: state.totalPrice + action.price\n//         }\n\n\n\n//     case actionType.REMOVE_MEAL:\n//         return {\n//             ...state,\n//             selectedBurger: {\n//                 ...state.selectedBurger,\n//                 price: action.resetPrice ? action.resetPrice : state.selectedBurger.price - action.price,\n//                 note: action.note\n//             }\n//             // totalPrice: state.totalPrice + action.price\n//         }\n\n\n\n\n\n\n\n\n\n\n//     case actionType.SHOW_MENU:\n//         return {\n//             ...state,\n//             menu: action.menu\n//         }\n\n\n//     case actionType.SELECTED_BURGER:\n//         return {\n//             ...state,\n//             selectedBurger: {\n//                 ...action.burger,\n//                 extra: { ...extraIngredients }\n//                 // extra: action.burger.extra ?  {...action.burger.extra} : {...action.burger.ingredients},\n//                 // price: action.burger.price,\n//                 // ateria: null\n//             }\n//         }\n\n\n//     case actionType.ADD_TO_CART:\n//         return {\n//             ...state,\n//             cart: state.cart.concat(action.item),\n//             totalPrice: state.totalPrice + action.item.price\n//         }\n\n//     case actionType.DELETE_FROM_CART:\n//         return {\n//             ...state,\n//             cart: state.cart.filter((_, index) => action.index !== index),\n//             totalPrice: state.totalPrice >= 0 && state.totalPrice - action.burger.price\n//         }\n\n\n//     default:\n//         return state\n// }","import * as actionType from '../actions/actionTypes'\n\nconst initState = {\n    selectedBurger: null,\n    ingredientPrices: {  // can be defined with DB\n        salad: 0.4,\n        bacon: 0.9,\n        cheese: 0.7,\n        meat: 1,\n        onions: 1,\n    },\n    ateria: [\n        ['Coca-Cola', 'Fanta', 'Sprite'],\n        ['French fries', 'Sweet potato']\n    ],\n}\n\nconst extraIngredients = {\n    meat: 0,\n    bacon: 0,\n    cheese: 0,\n    onions: 0,\n    salad: 0\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n\n        case actionType.SELECTED_BURGER:\n            return {\n                ...state,\n                selectedBurger: {\n                    ...action.burger,\n                    note: null,\n                    extra: { ...extraIngredients }\n                }\n            }\n\n        case actionType.ADD_INGREDIENT:\n\n            return {\n                ...state,\n                selectedBurger: {\n                    ...state.selectedBurger,\n                    extra: {\n                        ...state.selectedBurger.extra,\n                        [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] + 1\n                    },\n                    price: (state.selectedBurger.extra[action.ingredientName] >= 0 ? state.selectedBurger.price + state.ingredientPrices[action.ingredientName] : state.selectedBurger.price),\n\n                }\n            }\n\n        case actionType.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                selectedBurger: {\n                    ...state.selectedBurger,\n                    extra: {\n                        ...state.selectedBurger.extra,\n                        [action.ingredientName]: state.selectedBurger.extra[action.ingredientName] - 1\n                    },\n                    price: (state.selectedBurger.extra[action.ingredientName] > 0 ? state.selectedBurger.price - state.ingredientPrices[action.ingredientName] : state.selectedBurger.price)\n                }\n            }\n\n\n        case actionType.GET_MEAL:\n            return {\n                ...state,\n                selectedBurger: {\n                    ...state.selectedBurger,\n                    name: state.selectedBurger.name + ' Meal',\n                    price: state.selectedBurger.price + action.price,\n                }\n            }\n\n\n\n        case actionType.REMOVE_MEAL:\n            return {\n                ...state,\n                selectedBurger: {\n                    ...state.selectedBurger,\n                    name: state.selectedBurger.name.replace(\" Meal\", \"\"),\n                    price: action.resetPrice || state.selectedBurger.price - action.price,\n                    note: ''\n                }\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport default reducer","import * as actionType from '../actions/actionTypes'\n\nconst initState = {\n    cart: [],\n    totalPrice: 0,\n    order: null,\n}\n\nconst reducer = (state = initState, action) => {\n    switch (action.type) {\n\n\n        case actionType.REDUCE_AMOUNT:\n            let decreaseAmountInCart = [...state.cart]\n            decreaseAmountInCart[action.index].amount = decreaseAmountInCart[action.index].amount - 1 > 0\n                ? decreaseAmountInCart[action.index].amount - 1\n                : decreaseAmountInCart.splice(action.index, 1)\n            return {\n                ...state,\n                cart: [...decreaseAmountInCart],\n                totalPrice: state.totalPrice >= 0 && state.totalPrice - action.item.price\n            }\n\n        case actionType.INCREASE_AMOUNT:\n            let increaseAmountInCart = [...state.cart]\n            increaseAmountInCart[action.index].amount = increaseAmountInCart[action.index].amount + 1\n            return {\n                ...state,\n                cart: [...increaseAmountInCart],\n                totalPrice: state.totalPrice + action.item.price\n            }\n\n\n\n        case actionType.ADD_TO_CART:\n            let g = [...state.cart]\n            let find = g.find(x => x.type !== 'burger' && x.id === action.item.id);\n            if (find === undefined) {\n                g.push(action.item)\n            } else {\n                g.map(el => el.id === find.id ? (el.amount = el.amount + 1) : el.amount);\n            }\n\n            return {\n                ...state,\n                cart: [...g],\n                totalPrice: state.totalPrice + action.item.price\n            }\n\n\n        case actionType.DELETE_FROM_CART:\n            return {\n                ...state,\n                cart: state.cart.filter((_, index) => action.index !== index),\n                totalPrice: state.totalPrice >= 0 && state.totalPrice - (action.burger.price * action.burger.amount)\n            }\n\n\n        case actionType.CHECK_OUT:\n            return {\n                ...state,\n                order: action.order,\n                errorMSG: null\n            }\n\n        case actionType.CLOSE_CHECK_OUT:\n            if (!state.errorMSG) {\n                return {\n                    ...state,\n                    cart: [],\n                    totalPrice: 0,\n                    selectedBurger: null,\n                    order: null,\n                    errorMSG: null\n                }\n            }\n            break\n\n        default:\n            return state\n    }\n}\n\n\nexport default reducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport menuReducer from './store/reducers/menuReducer'\nimport orderReducer from './store/reducers/orderReducer'\nimport cartReducer from './store/reducers/cartReducer'\nimport * as serviceWorker from './serviceWorker';\n\nconst mainReducer = combineReducers({\n  order: orderReducer,\n  menu : menuReducer,\n  cart: cartReducer\n})\n\nconst store = createStore(mainReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}